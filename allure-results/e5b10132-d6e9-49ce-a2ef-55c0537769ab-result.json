{"name": "test_mul[1--1-1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert -1 == 1\n +  where -1 = <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50>>(1, -1)\n +    where <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50>> = <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50>.mul\n +      where <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50> = <test_pytest.tests.test_calc.TestCalc object at 0x0000022CECE23E20>.calc", "trace": "self = <test_pytest.tests.test_calc.TestCalc object at 0x0000022CECE23E20>, a = 1, b = -1, c = 1\n\n    @pytest.mark.parametrize('a,b,c',[\n        [1,2,2],\n        [-1,-1,1],\n        [1,-1,1]\n    ])\n    def test_mul(self,a,b,c):\n>       assert self.calc.mul(a,b) == c\nE       assert -1 == 1\nE        +  where -1 = <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50>>(1, -1)\nE        +    where <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50>> = <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50>.mul\nE        +      where <test_pytest.core.calc.Calc object at 0x0000022CECEEAE50> = <test_pytest.tests.test_calc.TestCalc object at 0x0000022CECE23E20>.calc\n\ntest_pytest\\tests\\test_calc.py:18: AssertionError"}, "parameters": [{"name": "a", "value": "1"}, {"name": "b", "value": "-1"}, {"name": "c", "value": "1"}], "start": 1603894327241, "stop": 1603894327241, "uuid": "908d8c10-a3c5-4718-a7eb-ccce4fb6be90", "historyId": "73af5ff388028f07c1abe6baa1e296d3", "testCaseId": "d593bbf8f4598bed05cf71f4c633cff9", "fullName": "test_pytest.tests.test_calc.TestCalc#test_mul", "labels": [{"name": "parentSuite", "value": "test_pytest.tests"}, {"name": "suite", "value": "test_calc"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "nb2-hz20113336"}, {"name": "thread", "value": "11552-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pytest.tests.test_calc"}]}