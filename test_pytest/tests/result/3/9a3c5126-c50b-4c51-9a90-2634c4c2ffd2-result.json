{"name": "test_mulf[-1--1--1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1 == -1\n +  where 1 = <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x000002500C008AF0>>(-1, -1)\n +    where <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x000002500C008AF0>> = <test_pytest.core.calc.Calc object at 0x000002500C008AF0>.mul\n +      where <test_pytest.core.calc.Calc object at 0x000002500C008AF0> = <test_pytest.tests.test_calc.TestCalc object at 0x000002500BFFF550>.calc", "trace": "self = <test_pytest.tests.test_calc.TestCalc object at 0x000002500BFFF550>, a = -1, b = -1, c = -1\n\n    @pytest.mark.parametrize('a,b,c', [\n        [1, 2, 3],\n        [-1, -1, -1],\n        [1, 0, 1]\n    ])\n    # 乘法方法\n    @allure.story(\"乘法模块逆向用例\")\n    def test_mulf(self, a, b, c):\n>       assert self.calc.mul(a, b) == c\nE       assert 1 == -1\nE        +  where 1 = <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x000002500C008AF0>>(-1, -1)\nE        +    where <bound method Calc.mul of <test_pytest.core.calc.Calc object at 0x000002500C008AF0>> = <test_pytest.core.calc.Calc object at 0x000002500C008AF0>.mul\nE        +      where <test_pytest.core.calc.Calc object at 0x000002500C008AF0> = <test_pytest.tests.test_calc.TestCalc object at 0x000002500BFFF550>.calc\n\ntest_calc.py:38: AssertionError"}, "parameters": [{"name": "a", "value": "-1"}, {"name": "b", "value": "-1"}, {"name": "c", "value": "-1"}], "start": 1608700647909, "stop": 1608700647909, "uuid": "191b3250-5be9-42c4-89e7-13e215a3f5b4", "historyId": "5e6b72952bf310ccd9cb3a5898e78ae5", "testCaseId": "8898166c10337ff4c96ddd5c1547b397", "fullName": "test_calc.TestCalc#test_mulf", "labels": [{"name": "story", "value": "乘法模块逆向用例"}, {"name": "suite", "value": "test_calc"}, {"name": "subSuite", "value": "TestCalc"}, {"name": "host", "value": "nb2-hz20113336"}, {"name": "thread", "value": "18688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calc"}]}